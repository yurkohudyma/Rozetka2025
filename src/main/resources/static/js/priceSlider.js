document.addEventListener('DOMContentLoaded', function () {
    const slider = document.getElementById('price-slider');
    if (!slider) {
        console.warn("‚ùó –°–ª–∞–π–¥–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ DOM");
        return;
    }

    const min = parseFloat(slider.dataset.min);
    const max = parseFloat(slider.dataset.max);

    if (isNaN(min) || isNaN(max)) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–∏—Å–ª–æ–≤—ñ min/max –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞");
        return;
    }

    noUiSlider.create(slider, {
        start: [min, max],
        connect: true,
        step: 1,
        range: {
            min: min,
            max: max
        },
        format: {
            to: value => value.toFixed(2),
            from: value => parseFloat(value)
        }
    });

    const minDisplay = document.getElementById('min-price');
    const maxDisplay = document.getElementById('max-price');

    slider.noUiSlider.on('update', function (values) {
        if (minDisplay) minDisplay.textContent = values[0];
        if (maxDisplay) maxDisplay.textContent = values[1];

        updateResetButtonVisibility(); // üëà –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —Ä–∞–∑–æ–º
    });

    slider.noUiSlider.on('change', function () {
        applyFilters(); // üëà –æ–∫—Ä–µ–º–æ, –±–æ –Ω–µ —Ö–æ—á–µ—à —Ñ–µ—Ç—á–∏—Ç–∏ –Ω–∞ –∫–æ–∂–µ–Ω –ø—ñ–∫—Å–µ–ª—å
    });


    /*slider.noUiSlider.on('update', function (values) {
        if (minDisplay) minDisplay.textContent = values[0];
        if (maxDisplay) maxDisplay.textContent = values[1];
    });

    slider.noUiSlider.on('change', function () {
        applyFilters();
    });

    slider.noUiSlider.on('update', function () {
        updateResetButtonVisibility();
    });*/
});
